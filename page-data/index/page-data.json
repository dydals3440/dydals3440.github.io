{"componentChunkName":"component---src-pages-index-js","path":"/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"2995a5ee-1bc6-56fd-9799-15be272daa9e","excerpt":"useState에 대해서 알아보자! useState는 리액트에서 가장 많이 사용하는 훅 중 하나로, 상태를 업데이트 한다고 생각하면 좋습니다. [name, setName], [people, setPeople] 과 같이 사용할 수 있다. 이름은 딱히 중요하지 않다. useState Hook을 import 해와야 하며, 초기값에는 문자열, 객체\nsetState를 통해 우리의 state 값을 변경할 수 있다. setState를 사용해서 state를 변경할 떄마다 컴포넌트는 렌더링이 계속 됩니다. useState의 특징 state값이 이전 상태 값과 연관된 경우 useState를 통해 초기값을 받아올떄 어떠한 무거운 값을 해야할떄 useState의 인자로 콜백함수를 넣어주면 맨 처음 렌더링이 될떄 1번만 시행되게 할 수 있습니다. 이 부분은 아래에서 코드 실습으로 자세하게 설명 해보겠습니다. useState 시간 증가 실습\n위와 같은 시간을 1시간씩 증가시켜주는 버튼을 만들어 보겠습니다.…","frontmatter":{"categories":"react","title":"useState Hook에 대해 자세하게 알아보자!","date":"April 17, 2023"},"fields":{"slug":"/useState정리/"}}},{"node":{"id":"6bb2eba4-a3fa-53fb-998e-107fec16eff7","excerpt":"useEffect에 대해 알아보자! useEffect란 어떠한 컴포넌트가\u001d Mount되었을떄 Update될때 UnMount되었을 떄 특정 작업을 처리할 코드를 실행시켜주고 싶을떄 사용하면 된다. useEffect는 콜백함수를 인자로 전달받습니다. useEffect의 인자로 하나의 콜백함수만 받을때! 렌더링 될 때마다 실행됩니다. useEffect의 첫번쨰 인자로 콜백함수와, 두번쨰 인자로 dependency array를 받는 경우. 화면에 첫 렌더링 될떄 실행, value 값이 바뀔때 마다 실행! 자주 쓰는 경우 Clean Up - 정리 할떄 useEffect의 리턴 값으로 함수를 넣어주면 됩니다. 구독할 경우, 구독을 해지 해 주는 정리 작업을 해주어야 합니다. 타이머를 실행했다면, 타이머를 멈추는 정리 작업, eventListener를 등록했다면 이것을 정리해주는 정리작업도 필요. 이런 경우에는 useEffect의 리턴 값으로 함수를 넣어주면 된다. 예제 먼저 아래 이미지와 같…","frontmatter":{"categories":"react","title":"useEffect Hook에 대해 자세하게 알아보자!","date":"April 17, 2023"},"fields":{"slug":"/useEffect정리/"}}},{"node":{"id":"507a83a5-cfcc-54fa-b26f-cec349e8ccf2","excerpt":"2주차 베스트 워크북 선정 👑 2주차 베스트 워크북 회고! \n2주차 베스트 워크북에 선정되었습니다 👏👏👏👏 1주차떄 나름 열심히 워크북을 작성했는데, 당첨되지 않아 아쉬웠는데\n1주차 때 ios파트에서 하신 분의 워크북을 보았더니… 절로 납득하게 되었습니다. 그래서 개인적으로 어떻게 해야 베스트 워크북에 선정이 될 수 있을까? 고민을 했다가, 개념적인 내용은 사실 다들 검색하면서 잘 찾아오기 때문에, 개인적으로 만드는 실습 과제에서 조금 차이점을 만들어 볼려고 노력했습니다. 이번 실습 과제는 기존에 만들었던 HTML, CSS로만 제작했던 넷플릭스 페이지를, JS 즉, 동적인 기능을 추가하는 것입니다. 음… 기존에 1주차 때 얼마없는 넷플릭스의 동적인 기능을 CSS로 구현한 탓에 JS로 만들것이 없기떄문에 기존에 없던 기능을 추가하고, 이전에 넷플릭스 홈페이지 때 사용했던 Navigation을 만들어보자가 저의 결론이였습니다. 내가 만든 새로운 넷플릭스 홈페이지에 추가한 JS! Aut…","frontmatter":{"categories":"UMC","title":"UMC 2주차 베스트 워크북 선정 회고!","date":"April 12, 2023"},"fields":{"slug":"/UMC 2주차 베스트워크북/"}}},{"node":{"id":"b95f906c-160e-53ab-a06c-78f9ba87ee09","excerpt":"Chapter 3. 리액트 기초 🎯 핵심 키워드 MPA / SPA MPA Multi Page Application은 여러 개의 페이지로 구성된 Application을 의미합니다.\nMPA는 새로운 페이지를 요청할 떄마다 정적 리소스가 다운로드 되고, 그에 맞춰 전체 페이지를 다시 렌더링합니다! 인터넷 주소창에 주소를 입력하거나, 링크를 클릭하는 등 사용자가 어떠한 요청을 한다면 그에 맞는 html, 이미지 등의 파일들이 전부 다운로드 되고 다시 렌더링 됩니다.\n우리는 이래서 MPA를 SSR(Server Side Rendering) 방식으로 렌더링 한다고 말합니다.\n스크린샷 2023-04-05 오전 9.30.00.png\nMPA는 Client가 Server에게 Initial Request시 HTML을 받습니다.\nPage가 마운트 될떄마다(리로드) post방식으로 다시 HTML을 받는 것을 확인할 수 있습니다. MPA 장점! SEO 검색 엔진 최적화 관점에서 유리하다! M…","frontmatter":{"categories":"UMC","title":"UMC 3주차 워크북","date":"April 10, 2023"},"fields":{"slug":"/UMC 3주차 Study/"}}},{"node":{"id":"72168ec7-1d30-5b99-be49-7937a565a805","excerpt":"Chapter 2. 퍼블리싱 심화 및 자바스크립트 기초 (2주차 베스트 워크북 선정 👑) 🎯 핵심 키워드 변수 변수  재할당(Reassignable) 변경(Mutable) let Yes Yes const No Yes 변수가 가리키고있는 하는것은 ,  합니다. var Var(💩) 그동안 코딩을 하면서 우리는 , ,  라는 변수가 있다는 것은 알았을 것이다. 는 재할당이 필요 없는 경우 자주 사용하고, 은 재할당이 필요한 경우 사용, 은 사용하는 경우를 보지못했을 것이다. 그러고 대부분의 강사마다 사용하지말라고 아마 추천을 할 것이다. 그이유는 무엇인지에 대해 알아보자! var을 사용하지 않는 이유! 하다. 즉, 선언인지 재할당인지 구분하기가 매우 어렵다. 중복 선언이 가능하다. (버그 유발, 실수 유발, 협업시 더 곤란해지고 어려워짐) 로 선언한 변수는 중복해서 선언이 가능합니다. 이 경우, 마지막에 할당한 값이 변수에 저장이 됩니다. 하지만, 초기화 없이  처럼 선언만 한 경우에는…","frontmatter":{"categories":"UMC","title":"UMC 2주차 워크북","date":"April 03, 2023"},"fields":{"slug":"/UMC 2주차 Study/"}}},{"node":{"id":"a15c793b-53da-5832-941c-930a71170661","excerpt":"Chapter 1. HTML + CSS + JS (1) 🎯 핵심 키워드 Web URL/URI/둘의 차이점 URL \n웹 주소이다, 컴퓨터 네트워크 상에서 리소스가 어디에 위치해있는지 알려주기 위한 규약이다.\nUntitled 프로토콜 브라우저가 리소스를 요청하기 위해 사용해야 하는 을 나타낸다.\n은 중앙 컴퓨터와 단말기 사이에서 데이터 통신을 원활하게 하기 위해 필요한 통신 규약으로, 웹에서는 브라우저와 서버 간에 데이터를 주고 받기 위한 방식으로 / 프로토콜이 가장 많이 사용되고 있다. / 외에도 (이메일 주소를 지정하는 프로토콜), (파일을 주고 받는 프로토콜) 등 다양한 프로토콜이 존재한다. (Hyper Text Transfer Protocol): 웹 브라우저와 웹 서버가 서로 데이터를 주고받기 위해 만든 통신규약 (Hyper Text Transter Protocol Secure): 된 버전 ://www.naver.com > ://www.google.co.kr > ://192.2…","frontmatter":{"categories":"UMC","title":"UMC 1주차 워크북","date":"March 27, 2023"},"fields":{"slug":"/UMC 1주차 Study/"}}},{"node":{"id":"5658749a-bdce-5de9-8d2d-c93da02fc5d8","excerpt":"늦은 SMU-UMC 합격 후기입니다~!!!\n저는 평범한 경영학과 학생입니다!!!\n저는 경영학부임에도 불구하고 개발하는데 관심이 매우 많아서 혼자 스스로 개인적으로 공부하는 것 외에도 다양한 사람들(Back/Front End 개발자 분들, 디자이너, PM분들)과 프로젝트 진행을 하고 실제로 평가받아보고 싶은 마음이 커서 개발 동아리인 UMC에 지원하게 되었습니다!! 1. UMC 서류 합격! UMC 서류 합격 사진!\n대부분 전공자들이 합격하는 것으로 알고있어서 될지 안될지는 몰랐지만.. 합격을 해버렸습니다!!! 먼저, 서류는 Google Form 형태로 진행되었고 질문은 아래에 적어보겠습니다. 코딩 경험 유무 & 배워본 언어! (수준 평가 상/중/하)\n개인적으로 Python, HTML, CSS, JS, React를 조금 배웠기에 그대로 적었습니다! UMC 지원 동기와 UMC 활동을 통해 기대하는 바를 알려달라!\n개인 프로젝트만 위주로 하는 저였기에, 다양한 분야의 사람들과 소통을 하며…","frontmatter":{"categories":"UMC","title":"UMC 합격 후기!","date":"March 20, 2023"},"fields":{"slug":"/UMC 합격 후기/"}}},{"node":{"id":"eb59327c-37cb-50b8-999d-b23d8ea05363","excerpt":"👋 소개 블로그를 직접 운영하면서 조금씩 그려봤던 이상적인 개발 블로그 테마를 Gatsby를 통해 만들어보게 되었습니다. 이 테마가 블로그를 운영하고자 하시는 분들에게 자신의 이야기를 잘 담을 수 있는 공간이 되었으면 좋겠습니다.🙌 블로그 테마가 맘에 드셨다면 아래 과정을 통해 자신의 블로그를 만들어보시길 바랍니다! 혹시 만드시는 과정에서 궁금하신 점이나 어려움이 있으시다면 이슈를 통해 문의 남겨주세요! 스타는 블로그 테마를 지속적으로 발전시키는데 큰 힘이 됩니다!⭐️ 🚀 시작하기 Github Page나 Netlify 중 원하시는 배포 환경에 따라 다음 과정을 진행하시면 빠르게 블로그를 만드실 수 있습니다. 🦖 GitHub Page로 만들기 깃헙 페이지를 통해 블로그를 만드시다면 아래 글을 참고해주세요! Gatsby 테마로 GitHub Blog 만들기 🔧 Netlify로 만들기 아래 버튼을 활용하면 개인 계정에 를 사용하고 있는 Repository 생성과 Netlify에 배포를 동시…","frontmatter":{"categories":"블로그 featured","title":"쉽고 빠르게 나만의 개츠비(Gatsby) 블로그 만들기","date":"March 22, 2021"},"fields":{"slug":"/gatsby-starter-zoomkoding-introduction/"}}}]},"site":{"siteMetadata":{"language":"ko","author":{"name":"김용민","bio":{"role":"개발자","description":["사람에 가치를 두는","소통을 중요시 하는","변화에 빠르게 적응하고자 노력하는"],"thumbnail":"Profile.png"},"social":{"github":"https://github.com/dydals3440","linkedIn":"https://www.linkedin.com/in/dydals3440","email":"dydals3440@gmail.com"}}}}},"pageContext":{}},"staticQueryHashes":["1073350324","1956554647","2938748437","3350743975"]}